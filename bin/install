#!/bin/bash
DIRNAME="$(cd "$(dirname $BASH_SOURCE)"; pwd)"

if [ "${DIRNAME}" != "/var/www/html/repair-cafe-app/bin" ]
then
    echo "[ERROR] Must clone into /var/www/html/repair-cafe-app"
    exit
fi

git config --global --add safe.directory /var/www/html/repair-cafe-app

# Install required packages
sudo apt update
sudo apt -y install wget default-jre python3 python3-venv python3-pip libbluetooth-dev nginx libffi-dev libssl-dev network-manager
USER=$( whoami )
# Download and install OpenSearch
if [ ! -e /etc/opensearch ]
then
(
    cd /tmp
    wget -N https://artifacts.opensearch.org/releases/bundle/opensearch/2.11.1/opensearch-2.11.1-linux-arm64.deb
    sudo apt -y install ./opensearch-2.11.1-linux-arm64.deb
    rm ./opensearch-2.11.1-linux-arm64.deb
)
fi
# Install python3.9
(
if [[ "$(which python3.9)" == "" ]]
then
    cd /tmp
    wget -N https://www.python.org/ftp/python/3.9.18/Python-3.9.18.tgz
    tar -xzf Python-3.9.18.tgz
    cd Python-3.9.18
    ./configure --enable-optimizations
    make
    sudo make install
fi
)

# Setup virtual environment
(
    cd ${DIRNAME}/..
    python3.9 -m venv venv
    . ./venv/bin/activate
    pip install setuptools==58.0.0
    pip install -r requirements.txt
)
# Link files
CONF_DIR="$(cd ${DIRNAME}/../conf; pwd)"
sudo mkdir -p /var/log/gunicorn
sudo mkdir -p /var/run/repair-cafe-app
sudo rm /etc/nginx/sites-enabled/*
sudo ln -fs "${CONF_DIR}/nginx-site" /etc/nginx/sites-enabled
sudo ln -fs "${CONF_DIR}/rc-ticket.service" /lib/systemd/system
sudo cp "${CONF_DIR}/opensearch.yml" /etc/opensearch/opensearch.yml
sudo systemctl enable opensearch
sudo systemctl enable nginx
sudo systemctl enable rc-ticket
sudo cp "${CONF_DIR}/sudoers-snippet" /etc/sudoers.d/10-www-data-date-hwclock
sudo chown -R ${USER}:www-data "${DIRNAME}/.." /var/log/gunicorn /var/run/repair-cafe-app 
sudo chmod -R g+w "${DIRNAME}/.." /var/log/gunicorn /var/run/repair-cafe-app

let count=1
while (( 1 ))
do
    read -p "[PROMPT] Enter printer #${count}'s MAC address. ENTER to finish." MAC
    if [[ "${MAC}" == "" ]]
    then
        exit 0
    fi
    read -p "[CONFIRM] Confirm print #${count}'s MAC address: ${MAC} (y/n)" CONFIRM
    if [[ "${CONFIRM}" == "yes" ]] || [[ "${CONFIRM}" == "y" ]] || [[ "${CONFIRM}" == "Y" ]]
    then
        cp 
    else
        echo "[NOT CONFIRMED]"
    fi
done


